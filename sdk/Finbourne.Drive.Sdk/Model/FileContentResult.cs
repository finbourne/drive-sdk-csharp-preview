/* 
 * FINBOURNE Drive API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.60
 * Contact: info@finbourne.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using OpenAPIDateConverter = Lusid.Drive.Sdk.Client.OpenAPIDateConverter;

namespace Lusid.Drive.Sdk.Model
{
    /// <summary>
    /// FileContentResult
    /// </summary>
    [DataContract]
    public partial class FileContentResult :  IEquatable<FileContentResult>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FileContentResult" /> class.
        /// </summary>
        /// <param name="fileContents">fileContents.</param>
        /// <param name="fileDownloadName">fileDownloadName.</param>
        /// <param name="lastModified">lastModified.</param>
        /// <param name="entityTag">entityTag.</param>
        /// <param name="enableRangeProcessing">enableRangeProcessing.</param>
        public FileContentResult(byte[] fileContents = default(byte[]), string fileDownloadName = default(string), DateTimeOffset? lastModified = default(DateTimeOffset?), EntityTagHeaderValue entityTag = default(EntityTagHeaderValue), bool? enableRangeProcessing = default(bool?))
        {
            this.FileContents = fileContents;
            this.FileDownloadName = fileDownloadName;
            this.LastModified = lastModified;
            this.EntityTag = entityTag;
            this.EnableRangeProcessing = enableRangeProcessing;
        }
        
        /// <summary>
        /// Gets or Sets FileContents
        /// </summary>
        [DataMember(Name="fileContents", EmitDefaultValue=false)]
        public byte[] FileContents { get; set; }

        /// <summary>
        /// Gets or Sets ContentType
        /// </summary>
        [DataMember(Name="contentType", EmitDefaultValue=false)]
        public string ContentType { get; private set; }

        /// <summary>
        /// Gets or Sets FileDownloadName
        /// </summary>
        [DataMember(Name="fileDownloadName", EmitDefaultValue=false)]
        public string FileDownloadName { get; set; }

        /// <summary>
        /// Gets or Sets LastModified
        /// </summary>
        [DataMember(Name="lastModified", EmitDefaultValue=false)]
        public DateTimeOffset? LastModified { get; set; }

        /// <summary>
        /// Gets or Sets EntityTag
        /// </summary>
        [DataMember(Name="entityTag", EmitDefaultValue=false)]
        public EntityTagHeaderValue EntityTag { get; set; }

        /// <summary>
        /// Gets or Sets EnableRangeProcessing
        /// </summary>
        [DataMember(Name="enableRangeProcessing", EmitDefaultValue=false)]
        public bool? EnableRangeProcessing { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FileContentResult {\n");
            sb.Append("  FileContents: ").Append(FileContents).Append("\n");
            sb.Append("  ContentType: ").Append(ContentType).Append("\n");
            sb.Append("  FileDownloadName: ").Append(FileDownloadName).Append("\n");
            sb.Append("  LastModified: ").Append(LastModified).Append("\n");
            sb.Append("  EntityTag: ").Append(EntityTag).Append("\n");
            sb.Append("  EnableRangeProcessing: ").Append(EnableRangeProcessing).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as FileContentResult);
        }

        /// <summary>
        /// Returns true if FileContentResult instances are equal
        /// </summary>
        /// <param name="input">Instance of FileContentResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FileContentResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FileContents == input.FileContents ||
                    (this.FileContents != null &&
                    this.FileContents.Equals(input.FileContents))
                ) && 
                (
                    this.ContentType == input.ContentType ||
                    (this.ContentType != null &&
                    this.ContentType.Equals(input.ContentType))
                ) && 
                (
                    this.FileDownloadName == input.FileDownloadName ||
                    (this.FileDownloadName != null &&
                    this.FileDownloadName.Equals(input.FileDownloadName))
                ) && 
                (
                    this.LastModified == input.LastModified ||
                    (this.LastModified != null &&
                    this.LastModified.Equals(input.LastModified))
                ) && 
                (
                    this.EntityTag == input.EntityTag ||
                    (this.EntityTag != null &&
                    this.EntityTag.Equals(input.EntityTag))
                ) && 
                (
                    this.EnableRangeProcessing == input.EnableRangeProcessing ||
                    (this.EnableRangeProcessing != null &&
                    this.EnableRangeProcessing.Equals(input.EnableRangeProcessing))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FileContents != null)
                    hashCode = hashCode * 59 + this.FileContents.GetHashCode();
                if (this.ContentType != null)
                    hashCode = hashCode * 59 + this.ContentType.GetHashCode();
                if (this.FileDownloadName != null)
                    hashCode = hashCode * 59 + this.FileDownloadName.GetHashCode();
                if (this.LastModified != null)
                    hashCode = hashCode * 59 + this.LastModified.GetHashCode();
                if (this.EntityTag != null)
                    hashCode = hashCode * 59 + this.EntityTag.GetHashCode();
                if (this.EnableRangeProcessing != null)
                    hashCode = hashCode * 59 + this.EnableRangeProcessing.GetHashCode();
                return hashCode;
            }
        }
    }

}
